apply plugin: 'com.android.application'
//apply plugin: 'jacoco'

// See the following regarding optimisation of gradle builds:
//   https://developer.android.com/studio/build/optimize-your-build.html
// See the following regarding migrating to gradle plugin version 3:
//   https://developer.android.com/studio/preview/features/new-android-plugin-migration.html

// The line 'maven { url 'https://maven.fabric.io/public' }' is to fix the error:
//     'Error: Failed to resolve: com.twitter.sdk.android:twitter:x.y.z'
// See https://github.com/firebase/FirebaseUI-Android/issues/392'
repositories {
    mavenLocal()
    flatDir {
        dirs 'libs'
    }
    maven { url "https://maven.google.com" }
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    // Load the properties in local.properties (e.g. 'omdbapi.key') into a properties object.
    // Properties from the properties object are added to the app resources below.
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())

    // minSdkVersion must be >= 17 to set supportsRtl=true
    defaultConfig {
        applicationId "uk.jumpingmouse.moviecompanion"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true

        // By default, Firebase AuthUI includes translations for all string resources.
        // The next line restricts this to the string resources which are used.
        resConfigs "auto"

        // See:
        //   https://developer.android.com/studio/preview/features/new-android-plugin-migration.html
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }

    signingConfigs {
        release {
            keyAlias 'keyCapstone'
            keyPassword 'udacity'
            storeFile file('../capstone.jks')
            storePassword 'udacity'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled true
        }
        release {
            // Use the defaultConfig applicationId for the build type which is uploaded
            // to the Play Store.
            signingConfig signingConfigs.release

            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Flavour dimensions.
    // The order in which each dimension is listed determines its priority, from
    // highest to lowest, when Gradle merges variant sources and configurations.
    // Each product flavour must be assigned to one of the flavour dimensions.
    // Hence 'dev' and 'prod' are 'stage' flavours,
    // while 'free' and 'admin' are 'mode' flavours.
    flavorDimensions "stage", "mode"

    productFlavors {
        // If it is required to keep development (dev) data and production (prod)
        // data separate, create a new Firebase project for the 'dev' product
        // flavour (i.e. for the ...dev and ...dev.admin applicationIds).
        dev {
            dimension "stage"
            applicationIdSuffix '.dev'
            versionNameSuffix "-dev"

            // To avoid using legacy multidex, set minSdkVersion to 21 or higher.
            //minSdkVersion 21
            // The following configuration limits the "dev" flavour to using
            // English string resources and xxhdpi screen-density resources.
            //resConfigs "en", "xxhdpi"
        }
        prod {
            dimension "stage"
        }
        free {
            dimension "mode"
            applicationIdSuffix ".free"

            // Add the required properties from the properties object (which was loaded from
            // local.properties) to the app resources.
            // Facebook Application Id
            resValue "string", "facebook_application_id", properties.getProperty("facebook_application_id", "")
            // Facebook Application Id prefixed by 'fb', enables Chrome Custom tabs.
            resValue "string", "facebook_login_protocol_scheme", properties.getProperty("facebook_login_protocol_scheme", "")
        }
        admin {
            dimension "mode"
            applicationIdSuffix ".admin"
            versionNameSuffix "-admin"

            // Add the required admin properties from the properties object (which was loaded from
            // local.properties) to the app resources.
            // OMDb API key
            resValue "string", "omdbapi_key", properties.getProperty("omdbapi_key", "")
            // Facebook Application Id
            resValue "string", "facebook_application_id", properties.getProperty("facebook_application_id", "")
            // Facebook Application Id prefixed by 'fb', enables Chrome Custom tabs.
            resValue "string", "facebook_login_protocol_scheme", properties.getProperty("facebook_login_protocol_scheme", "")
        }
    }
}

ext {
    // The compatible versions of firebase, firebase-ui and the support library are listed here:
    // https://github.com/firebase/FirebaseUI-Android/blob/master/constants.gradle
    //SUPPORT_LIB_VERSION = '25.4.0'
    SUPPORT_LIB_VERSION = '26.0.0'
    FIREBASE_VERSION = '11.0.4'
    FIREBASE_UI_VERSION = '2.0.1'

    RETROFIT_VERSION = '2.2.0'

//    SUPPORT_LIB_VERSION = '25.1.1'
//    FIREBASE_VERSION = '10.2.0'
//    FIREBASE_UI_VERSION = '1.2.0'

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "com.android.support:appcompat-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:design:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:palette-v7:$SUPPORT_LIB_VERSION"

    // firebase-ui-auth, or other modules, have dependencies on these
    // See: https://github.com/firebase/FirebaseUI-Android
    implementation "com.android.support:cardview-v7:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:customtabs:$SUPPORT_LIB_VERSION"
    implementation "com.android.support:support-v4:$SUPPORT_LIB_VERSION"

    // Firebase
    implementation "com.google.android.gms:play-services-auth:$FIREBASE_VERSION"
    implementation "com.google.firebase:firebase-core:$FIREBASE_VERSION"
    implementation "com.google.firebase:firebase-analytics:$FIREBASE_VERSION"
    implementation "com.google.firebase:firebase-auth:$FIREBASE_VERSION"
    implementation "com.google.firebase:firebase-crash:$FIREBASE_VERSION"
    implementation "com.google.firebase:firebase-database:$FIREBASE_VERSION"

    // Firebase UI Auth
    implementation "com.firebaseui:firebase-ui-auth:$FIREBASE_UI_VERSION"
    implementation('com.facebook.android:facebook-android-sdk:4.22.1')

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.5.1'

//    // TMDb API
//    adminImplementation 'info.movito:themoviedbapi:1.6'

    // OMDb API
    adminImplementation project(':omdbapi')
    // Retrofit - dependency of OmdbApi
    adminImplementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    adminImplementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"

    // test
    testImplementation 'junit:junit:4.12'

    // androidTest
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

// This plugin reads the google-services.json file and is required for Firebase
apply plugin: 'com.google.gms.google-services'
